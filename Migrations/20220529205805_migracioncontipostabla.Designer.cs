// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SigesivServer.Models;

namespace SigesivServer.Migrations
{
    [DbContext(typeof(proyectoaseguradoraequipo5Context))]
    [Migration("20220529205805_migracioncontipostabla")]
    partial class migracioncontipostabla
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SigesivServer.Models.Asegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("celular");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeNacimiento");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int")
                        .HasColumnName("fkUsuario");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCompleto");

                    b.Property<string>("NumeroDeLicencia")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("numeroDeLicencia");

                    b.HasKey("Id");

                    b.HasIndex("FkUsuario");

                    b.ToTable("asegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.CasoDeCobertura", b =>
                {
                    b.Property<string>("condiciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("condiciones");

                    b.Property<string>("nombreDelCaso")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreDelCaso");

                    b.ToTable("sp_obtenerCoberturaDePoliza");
                });

            modelBuilder.Entity("SigesivServer.Models.Casosdecobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condiciones")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("condiciones");

                    b.Property<string>("NombreDelCaso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombreDelCaso");

                    b.HasKey("Id");

                    b.ToTable("casosdecobertura");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadospoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreEstado");

                    b.HasKey("Id");

                    b.ToTable("estadospolizas");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadosreporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreEstado");

                    b.HasKey("Id");

                    b.ToTable("estadosreporte");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadosvehiculosasegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreEstado");

                    b.HasKey("Id");

                    b.ToTable("estadosvehiculosasegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marca");

                    b.HasKey("Id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("SigesivServer.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkMarca")
                        .HasColumnType("int")
                        .HasColumnName("fkMarca");

                    b.Property<string>("Modelo1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modelo");

                    b.HasKey("Id");

                    b.HasIndex("FkMarca");

                    b.ToTable("modelos");
                });

            modelBuilder.Entity("SigesivServer.Models.Otrosinvolucrado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkReporte")
                        .HasColumnType("int")
                        .HasColumnName("fkReporte");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.HasIndex("FkReporte");

                    b.ToTable("otrosinvolucrados");
                });

            modelBuilder.Entity("SigesivServer.Models.Otrosvehiculosinvolucrado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("color");

                    b.Property<int?>("FkOtroInvolucrado")
                        .HasColumnType("int")
                        .HasColumnName("fkOtroInvolucrado");

                    b.Property<int>("FkReporte")
                        .HasColumnType("int")
                        .HasColumnName("fkReporte");

                    b.Property<int?>("Fkmarca")
                        .HasColumnType("int")
                        .HasColumnName("fkmarca");

                    b.Property<int?>("Fkmodelo")
                        .HasColumnType("int")
                        .HasColumnName("fkmodelo");

                    b.Property<string>("NumeroDePlaca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numeroDePlaca");

                    b.HasKey("Id");

                    b.HasIndex("FkOtroInvolucrado");

                    b.HasIndex("FkReporte");

                    b.ToTable("otrosvehiculosinvolucrados");
                });

            modelBuilder.Entity("SigesivServer.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkAsegurado");

                    b.Property<long>("NumDeTarjeta")
                        .HasColumnType("bigint")
                        .HasColumnName("numDeTarjeta");

                    b.HasKey("Id");

                    b.HasIndex("FkAsegurado");

                    b.ToTable("pagos");
                });

            modelBuilder.Entity("SigesivServer.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaDeIngreso")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeIngreso");

                    b.Property<int>("FkRol")
                        .HasColumnType("int")
                        .HasColumnName("fkRol");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int")
                        .HasColumnName("fkUsuario");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCompleto");

                    b.HasKey("Id");

                    b.HasIndex("FkRol");

                    b.HasIndex("FkUsuario");

                    b.ToTable("personal");
                });

            modelBuilder.Entity("SigesivServer.Models.Polizasdeseguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costoTotal");

                    b.Property<DateTime>("FechaDeExpiracion")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeExpiracion");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeInicio");

                    b.Property<int>("FkAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkAsegurado");

                    b.Property<int>("FkEstado")
                        .HasColumnType("int")
                        .HasColumnName("fkEstado");

                    b.Property<int>("FkPago")
                        .HasColumnType("int")
                        .HasColumnName("fkPago");

                    b.Property<int>("FkTipoDeCobertura")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoDeCobertura");

                    b.Property<int>("FkVehiculoAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkVehiculoAsegurado");

                    b.Property<string>("NumeroDePoliza")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numeroDePoliza");

                    b.HasKey("Id");

                    b.HasIndex("FkAsegurado");

                    b.HasIndex("FkEstado");

                    b.HasIndex("FkPago");

                    b.HasIndex("FkTipoDeCobertura");

                    b.HasIndex("FkVehiculoAsegurado");

                    b.ToTable("polizasdeseguro");
                });

            modelBuilder.Entity("SigesivServer.Models.Reportesdeincidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaDelReporte")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaDelReporte");

                    b.Property<int>("FkAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkAsegurado");

                    b.Property<int>("FkEstado")
                        .HasColumnType("int")
                        .HasColumnName("fkEstado");

                    b.Property<int>("FkPersonal")
                        .HasColumnType("int")
                        .HasColumnName("fkPersonal");

                    b.Property<int>("FkVehiculoAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkVehiculoAsegurado");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(8,6)")
                        .HasColumnName("latitud");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(8,6)")
                        .HasColumnName("longitud");

                    b.Property<string>("UrlImagen1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urlImagen1");

                    b.Property<string>("UrlImagen2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urlImagen2");

                    b.Property<string>("UrlImagen3")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urlImagen3");

                    b.Property<string>("UrlImagen4")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("urlImagen4");

                    b.Property<string>("UrlImagen5")
                        .HasColumnType("text")
                        .HasColumnName("urlImagen5");

                    b.Property<string>("UrlImagen6")
                        .HasColumnType("text")
                        .HasColumnName("urlImagen6");

                    b.Property<string>("UrlImagen7")
                        .HasColumnType("text")
                        .HasColumnName("urlImagen7");

                    b.Property<string>("UrlImagen8")
                        .HasColumnType("text")
                        .HasColumnName("urlImagen8");

                    b.HasKey("Id");

                    b.HasIndex("FkAsegurado");

                    b.HasIndex("FkEstado");

                    b.HasIndex("FkPersonal");

                    b.HasIndex("FkVehiculoAsegurado");

                    b.ToTable("reportesdeincidente");
                });

            modelBuilder.Entity("SigesivServer.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rol");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("SigesivServer.Models.StoredProdecuresTypes.Asegurado", b =>
                {
                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("celular");

                    b.Property<DateTime>("fechaDeNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fechaDeNacimiento");

                    b.Property<int?>("fkUsuario")
                        .HasColumnType("int")
                        .HasColumnName("fkUsuario");

                    b.Property<int?>("id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCompleto");

                    b.Property<string>("numeroDeLicencia")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("numeroDeLicencia");

                    b.ToTable("Asegurado");
                });

            modelBuilder.Entity("SigesivServer.Models.StoredProdecuresTypes.Pago", b =>
                {
                    b.Property<int>("fkAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("fkAsegurado");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<long>("numDeTarjeta")
                        .HasColumnType("bigint")
                        .HasColumnName("numDeTarjeta");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("SigesivServer.Models.StoredProdecuresTypes.Poliza", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("costoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("fechaDeExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkAsegurado")
                        .HasColumnType("int");

                    b.Property<int>("fkEstado")
                        .HasColumnType("int");

                    b.Property<int>("fkPago")
                        .HasColumnType("int");

                    b.Property<int>("fkTipoDeCobertura")
                        .HasColumnType("int");

                    b.Property<int>("fkVehiculoAsegurado")
                        .HasColumnType("int");

                    b.Property<string>("numeroDePoliza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Poliza");
                });

            modelBuilder.Entity("SigesivServer.Models.StoredProdecuresTypes.Usuario", b =>
                {
                    b.Property<int>("fkRol")
                        .HasColumnType("int")
                        .HasColumnName("fkRol");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SigesivServer.Models.StoredProdecuresTypes.VehiculoAsegurado", b =>
                {
                    b.Property<int>("año")
                        .HasColumnType("int")
                        .HasColumnName("año");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<int>("fkEstado")
                        .HasColumnType("int")
                        .HasColumnName("fkEstado");

                    b.Property<int>("fkMarca")
                        .HasColumnType("int")
                        .HasColumnName("fkMarca");

                    b.Property<int>("fkModelo")
                        .HasColumnType("int")
                        .HasColumnName("fkModelo");

                    b.Property<int?>("id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("numeroDePlacas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numeroDePlacas");

                    b.Property<string>("numeroDeSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroDeSerie");

                    b.ToTable("VehiculoAsegurado");
                });

            modelBuilder.Entity("SigesivServer.Models.Tiposdecobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo");

                    b.Property<int>("LapsoDeCobertura")
                        .HasColumnType("int")
                        .HasColumnName("lapsoDeCobertura");

                    b.Property<string>("TipoDeCobertura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tipoDeCobertura");

                    b.HasKey("Id");

                    b.ToTable("tiposdecobertura");
                });

            modelBuilder.Entity("SigesivServer.Models.TiposdecoberturaCasosdecobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkCasoDeCobertura")
                        .HasColumnType("int")
                        .HasColumnName("fkCasoDeCobertura");

                    b.Property<int>("FkTipoDeCobertura")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoDeCobertura");

                    b.HasKey("Id");

                    b.HasIndex("FkCasoDeCobertura");

                    b.HasIndex("FkTipoDeCobertura");

                    b.ToTable("tiposdecobertura_casosdecobertura");
                });

            modelBuilder.Entity("SigesivServer.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkRol")
                        .HasColumnType("int")
                        .HasColumnName("fkRol");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("FkRol");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("SigesivServer.Models.Vehiculosasegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Año")
                        .HasColumnType("int")
                        .HasColumnName("año");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<int>("FkEstado")
                        .HasColumnType("int")
                        .HasColumnName("fkEstado");

                    b.Property<int>("FkMarca")
                        .HasColumnType("int")
                        .HasColumnName("fkMarca");

                    b.Property<int>("FkModelo")
                        .HasColumnType("int")
                        .HasColumnName("fkModelo");

                    b.Property<string>("NumeroDePlacas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("numeroDePlacas");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroDeSerie");

                    b.HasKey("Id");

                    b.HasIndex("FkEstado");

                    b.HasIndex("FkMarca");

                    b.HasIndex("FkModelo");

                    b.ToTable("vehiculosasegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.ViewModel_detalleDePolizaDeConductor", b =>
                {
                    b.Property<int>("año")
                        .HasColumnType("int")
                        .HasColumnName("año");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("celular");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color");

                    b.Property<DateTime>("fechaDeExpiracion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaDeExpiracion");

                    b.Property<DateTime>("fechaDeInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaDeInicio");

                    b.Property<DateTime>("fechaDeNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaDeNacimiento");

                    b.Property<int>("idAsegurado")
                        .HasColumnType("int")
                        .HasColumnName("idAsegurado");

                    b.Property<int>("idPoliza")
                        .HasColumnType("int")
                        .HasColumnName("idPoliza");

                    b.Property<int>("lapsoDeCobertura")
                        .HasColumnType("int")
                        .HasColumnName("lapsoDeCobertura");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marca");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modelo");

                    b.Property<string>("nombreCompleto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCompleto");

                    b.Property<string>("numeroDeLicencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroDeLicencia");

                    b.Property<string>("numeroDePlacas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroDePlacas");

                    b.Property<string>("numeroDePoliza")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroDePoliza");

                    b.Property<string>("tipoDeCobertura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoDeCobertura");

                    b.ToTable("poliza");
                });

            modelBuilder.Entity("SigesivServer.Models.Asegurado", b =>
                {
                    b.HasOne("SigesivServer.Models.Usuario", "FkUsuarioNavigation")
                        .WithMany("Asegurados")
                        .HasForeignKey("FkUsuario")
                        .HasConstraintName("FK_Asegurados_usuarios")
                        .IsRequired();

                    b.Navigation("FkUsuarioNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Modelo", b =>
                {
                    b.HasOne("SigesivServer.Models.Marca", "FkMarcaNavigation")
                        .WithMany("Modelos")
                        .HasForeignKey("FkMarca")
                        .HasConstraintName("FK_Modelos_marcas")
                        .IsRequired();

                    b.Navigation("FkMarcaNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Otrosinvolucrado", b =>
                {
                    b.HasOne("SigesivServer.Models.Reportesdeincidente", "FkReporteNavigation")
                        .WithMany("Otrosinvolucrados")
                        .HasForeignKey("FkReporte")
                        .HasConstraintName("FK_otrosInvolucrados_reportesDeSiniestro")
                        .IsRequired();

                    b.Navigation("FkReporteNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Otrosvehiculosinvolucrado", b =>
                {
                    b.HasOne("SigesivServer.Models.Otrosinvolucrado", "FkOtroInvolucradoNavigation")
                        .WithMany("Otrosvehiculosinvolucrados")
                        .HasForeignKey("FkOtroInvolucrado")
                        .HasConstraintName("FK_otrosVehiculosInvolucrados_otrosInvolucrados");

                    b.HasOne("SigesivServer.Models.Reportesdeincidente", "FkReporteNavigation")
                        .WithMany("Otrosvehiculosinvolucrados")
                        .HasForeignKey("FkReporte")
                        .HasConstraintName("FK_otrosVehiculosInvolucrados_reportesDeSiniestro")
                        .IsRequired();

                    b.Navigation("FkOtroInvolucradoNavigation");

                    b.Navigation("FkReporteNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Pago", b =>
                {
                    b.HasOne("SigesivServer.Models.Asegurado", "FkAseguradoNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("FkAsegurado")
                        .HasConstraintName("FK_Pagos_Asegurados")
                        .IsRequired();

                    b.Navigation("FkAseguradoNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Personal", b =>
                {
                    b.HasOne("SigesivServer.Models.Role", "FkRolNavigation")
                        .WithMany("Personals")
                        .HasForeignKey("FkRol")
                        .HasConstraintName("FK_personal_roles")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Usuario", "FkUsuarioNavigation")
                        .WithMany("Personals")
                        .HasForeignKey("FkUsuario")
                        .HasConstraintName("FK_personal_usuarios")
                        .IsRequired();

                    b.Navigation("FkRolNavigation");

                    b.Navigation("FkUsuarioNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Polizasdeseguro", b =>
                {
                    b.HasOne("SigesivServer.Models.Asegurado", "FkAseguradoNavigation")
                        .WithMany("Polizasdeseguros")
                        .HasForeignKey("FkAsegurado")
                        .HasConstraintName("FK_polizasDeSeguro_Asegurados")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Estadospoliza", "FkEstadoNavigation")
                        .WithMany("Polizasdeseguros")
                        .HasForeignKey("FkEstado")
                        .HasConstraintName("FK_polizasDeSeguro_estadosPolizas")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Pago", "FkPagoNavigation")
                        .WithMany("Polizasdeseguros")
                        .HasForeignKey("FkPago")
                        .HasConstraintName("FK_polizasDeSeguro_Pagos")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Tiposdecobertura", "FkTipoDeCoberturaNavigation")
                        .WithMany("Polizasdeseguros")
                        .HasForeignKey("FkTipoDeCobertura")
                        .HasConstraintName("FK_polizasDeSeguro_tiposDeCobertura")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Vehiculosasegurado", "FkVehiculoAseguradoNavigation")
                        .WithMany("Polizasdeseguros")
                        .HasForeignKey("FkVehiculoAsegurado")
                        .HasConstraintName("FK_polizasDeSeguro_VehiculosAsegurados")
                        .IsRequired();

                    b.Navigation("FkAseguradoNavigation");

                    b.Navigation("FkEstadoNavigation");

                    b.Navigation("FkPagoNavigation");

                    b.Navigation("FkTipoDeCoberturaNavigation");

                    b.Navigation("FkVehiculoAseguradoNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Reportesdeincidente", b =>
                {
                    b.HasOne("SigesivServer.Models.Asegurado", "FkAseguradoNavigation")
                        .WithMany("Reportesdeincidentes")
                        .HasForeignKey("FkAsegurado")
                        .HasConstraintName("FK_reportesDeSiniestro_asegurados1")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Estadosreporte", "FkEstadoNavigation")
                        .WithMany("Reportesdeincidentes")
                        .HasForeignKey("FkEstado")
                        .HasConstraintName("FK_reportesDeSiniestro_estadosReporte")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Personal", "FkPersonalNavigation")
                        .WithMany("Reportesdeincidentes")
                        .HasForeignKey("FkPersonal")
                        .HasConstraintName("FK_reportesDeSiniestro_personal")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Vehiculosasegurado", "FkVehiculoAseguradoNavigation")
                        .WithMany("Reportesdeincidentes")
                        .HasForeignKey("FkVehiculoAsegurado")
                        .HasConstraintName("FK_reportesDeSiniestro_VehiculosAsegurados")
                        .IsRequired();

                    b.Navigation("FkAseguradoNavigation");

                    b.Navigation("FkEstadoNavigation");

                    b.Navigation("FkPersonalNavigation");

                    b.Navigation("FkVehiculoAseguradoNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.TiposdecoberturaCasosdecobertura", b =>
                {
                    b.HasOne("SigesivServer.Models.Casosdecobertura", "FkCasoDeCoberturaNavigation")
                        .WithMany("TiposdecoberturaCasosdecoberturas")
                        .HasForeignKey("FkCasoDeCobertura")
                        .HasConstraintName("FK_tiposDeCobertura_casosDeCobertura_casosdecobertura")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Tiposdecobertura", "FkTipoDeCoberturaNavigation")
                        .WithMany("TiposdecoberturaCasosdecoberturas")
                        .HasForeignKey("FkTipoDeCobertura")
                        .HasConstraintName("FK_tiposDeCobertura_casosDeCobertura_tiposDeCobertura")
                        .IsRequired();

                    b.Navigation("FkCasoDeCoberturaNavigation");

                    b.Navigation("FkTipoDeCoberturaNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Usuario", b =>
                {
                    b.HasOne("SigesivServer.Models.Role", "FkRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("FkRol")
                        .HasConstraintName("FK_usuarios_roles")
                        .IsRequired();

                    b.Navigation("FkRolNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Vehiculosasegurado", b =>
                {
                    b.HasOne("SigesivServer.Models.Estadosvehiculosasegurado", "FkEstadoNavigation")
                        .WithMany("Vehiculosasegurados")
                        .HasForeignKey("FkEstado")
                        .HasConstraintName("FK_VehiculosAsegurados_estadosVehiculosAsegurados")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Marca", "FkMarcaNavigation")
                        .WithMany("Vehiculosasegurados")
                        .HasForeignKey("FkMarca")
                        .HasConstraintName("FK_VehiculosAsegurados_marcas")
                        .IsRequired();

                    b.HasOne("SigesivServer.Models.Modelo", "FkModeloNavigation")
                        .WithMany("Vehiculosasegurados")
                        .HasForeignKey("FkModelo")
                        .HasConstraintName("FK_VehiculosAsegurados_Modelos")
                        .IsRequired();

                    b.Navigation("FkEstadoNavigation");

                    b.Navigation("FkMarcaNavigation");

                    b.Navigation("FkModeloNavigation");
                });

            modelBuilder.Entity("SigesivServer.Models.Asegurado", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Polizasdeseguros");

                    b.Navigation("Reportesdeincidentes");
                });

            modelBuilder.Entity("SigesivServer.Models.Casosdecobertura", b =>
                {
                    b.Navigation("TiposdecoberturaCasosdecoberturas");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadospoliza", b =>
                {
                    b.Navigation("Polizasdeseguros");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadosreporte", b =>
                {
                    b.Navigation("Reportesdeincidentes");
                });

            modelBuilder.Entity("SigesivServer.Models.Estadosvehiculosasegurado", b =>
                {
                    b.Navigation("Vehiculosasegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.Marca", b =>
                {
                    b.Navigation("Modelos");

                    b.Navigation("Vehiculosasegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.Modelo", b =>
                {
                    b.Navigation("Vehiculosasegurados");
                });

            modelBuilder.Entity("SigesivServer.Models.Otrosinvolucrado", b =>
                {
                    b.Navigation("Otrosvehiculosinvolucrados");
                });

            modelBuilder.Entity("SigesivServer.Models.Pago", b =>
                {
                    b.Navigation("Polizasdeseguros");
                });

            modelBuilder.Entity("SigesivServer.Models.Personal", b =>
                {
                    b.Navigation("Reportesdeincidentes");
                });

            modelBuilder.Entity("SigesivServer.Models.Reportesdeincidente", b =>
                {
                    b.Navigation("Otrosinvolucrados");

                    b.Navigation("Otrosvehiculosinvolucrados");
                });

            modelBuilder.Entity("SigesivServer.Models.Role", b =>
                {
                    b.Navigation("Personals");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SigesivServer.Models.Tiposdecobertura", b =>
                {
                    b.Navigation("Polizasdeseguros");

                    b.Navigation("TiposdecoberturaCasosdecoberturas");
                });

            modelBuilder.Entity("SigesivServer.Models.Usuario", b =>
                {
                    b.Navigation("Asegurados");

                    b.Navigation("Personals");
                });

            modelBuilder.Entity("SigesivServer.Models.Vehiculosasegurado", b =>
                {
                    b.Navigation("Polizasdeseguros");

                    b.Navigation("Reportesdeincidentes");
                });
#pragma warning restore 612, 618
        }
    }
}
